name: deploy-backend
on:
  push:
    branches: [ main ]
    paths:
      - backend/**
      - Dockerfile
      - Gemfile*
      - lambda_function.rb

permissions:
  id-token: write   # OIDC
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: salon-rails-lambda
  LAMBDA_FUNCTION: salon-rails

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubActionsDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push image
        run: |
          ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
          IMAGE="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}"
          TAG=${GITHUB_SHA::7}
          docker build -t "${IMAGE}:${TAG}" .
          docker push "${IMAGE}:${TAG}"
          echo "IMAGE_URI=${IMAGE}:${TAG}" >> $GITHUB_ENV

      - name: Update Lambda to new image
        run: |
          aws lambda update-function-code \
            --function-name "${LAMBDA_FUNCTION}" \
            --image-uri "${IMAGE_URI}"
          aws lambda wait function-updated --function-name "${LAMBDA_FUNCTION}"
