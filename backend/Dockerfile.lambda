# builder
FROM public.ecr.aws/lambda/ruby:3.3 AS build

# DNF キャッシュを /tmp に逃がして容量エラー回避
RUN mkdir -p /tmp/dnf-cache && \
    dnf -y --setopt=keepcache=0 --setopt=cachedir=/tmp/dnf-cache update && \
    dnf -y --setopt=keepcache=0 --setopt=cachedir=/tmp/dnf-cache install \
      gcc gcc-c++ make which git tar gzip pkgconf-pkg-config libyaml-devel \
    && dnf clean all && rm -rf /var/cache/dnf /var/cache/yum /tmp/dnf-cache

WORKDIR /var/task

# 先に Gemfile 群
COPY Gemfile Gemfile.lock ./
RUN bundle lock --add-platform aarch64-linux ruby

# 本番インストール
ENV BUNDLE_WITHOUT="development:test" \
    BUNDLE_DEPLOYMENT="true" \
    BUNDLE_PATH="vendor/bundle"
RUN bundle install --jobs 4 --retry 3

# アプリ本体
COPY . .
RUN bundle install --jobs 4 --retry 3

# runtime
FROM public.ecr.aws/lambda/ruby:3.3
WORKDIR /var/task
COPY --from=build /var/task /var/task

# 実行時
ENV RAILS_ENV=production RAILS_LOG_TO_STDOUT=1 RAILS_SERVE_STATIC_FILES=1 RAILS_SKIP_ACTIVE_RECORD=1
CMD ["lambda_function.handler"]
